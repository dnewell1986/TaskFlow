@page "/tasks/edit/{id}"
@using TaskFlow.Shared
@using TaskFlow.Shared.Todos

@inject NavigationManager NavigationManager
@inject TodoService TodoService

<h3>Edit Todo</h3>

@if (error)
{
    <h1>There was an error processing your request</h1>
}
else if (Todo is null)
{
    <p>Loading...</p> 
}
else
{
    <RadzenTemplateForm Data="@Todo" Submit="@(async (TodoDto todo) => { await HandleSubmitAsync(todo); })">
        <RadzenRow>
            <RadzenStack>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Title" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox Name="Title" @bind-Value="Todo.Title" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Description" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox Name="Description" @bind-Value="Todo.Description" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Due Date" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenDatePicker Name="DueDate" @bind-Value="Todo.DueDate" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Priority" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenDropDown Name="Priority" @bind-Value="Todo.Priority" Data="@priorityOptions" TextProperty="Value" ValueProperty="Key" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow>
                    <RadzenButton ButtonType="ButtonType.Submit" Text="Update" Icon="add" />
                    <NavLink class="btn btn-secondary" href="/tasks">Cancel</NavLink>
                </RadzenRow>
            </RadzenStack>
        </RadzenRow>
    </RadzenTemplateForm>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private TodoDto Todo { get; set; }
    private bool error = false;
    private List<KeyValuePair<Priority, string>> priorityOptions;

    protected override async Task OnInitializedAsync()
    {
        if (Guid.TryParse(Id, out var result))
        {
            priorityOptions = GetPriorityOptions();
            Todo = await TodoService.GetTodoByIdAsync(result);            
        }
        else
        {
            error = true;
        }
    }

    public async Task HandleSubmitAsync(TodoDto todo)
    {
        await TodoService.UpdateTodoAsync(todo);
        //NavigationManager.NavigateTo("/tasks");
    }

    private List<KeyValuePair<Priority, string>> GetPriorityOptions()
    {
        return Enum.GetValues(typeof(Priority))
            .Cast<Priority>()
            .Select(priority => new KeyValuePair<Priority, string>(priority, priority.ToString())).ToList();
    }
}
